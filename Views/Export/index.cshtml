@model ContentfulApp.Models.ExportModel
<style>
    form div {
        margin-bottom: 25px;
    }

    input[type="text"], input[type="password"] {
        width: 50%;
    }

    #exportButton {
        margin-top: 20px; 
        background-color:darkorange;
    }

    label {
        font-weight: bold;
    }

    .dropdown {
        width: 250px; 
    }

    #excelDownloadLink {
        text-decoration: underline;
    }

    #loading span {
        animation: loading 1s infinite;
    }

    #loading span:nth-child(2) {
        animation-delay: 0.2s;
    }

    #loading span:nth-child(3) {
        animation-delay: 0.4s;
    }

    @@keyframes loading {
        0% {
            opacity: 0;
        }

        50% {
            opacity: 1;
        }

        100% {
            opacity: 0;
        }
    }

    
</style>
@using (Html.BeginForm("Index", "Export", FormMethod.Post, new { id = "exportForm" } ))
{
    @Html.LabelFor(model => model.Environment)
    @Html.DropDownListFor(model => model.Environment, new SelectList(new List<string>() { "Choose environment", "dev", "stage" }), new { @class = "form-control dropdown" })
    <br>
    @Html.LabelFor(model => model.SpaceId)
    @Html.DropDownListFor(model => model.SpaceId, new SelectList(new List<KeyValuePair<string, string>>()
    {
    new KeyValuePair<string, string>("Choose space", ""),
    new KeyValuePair<string, string>("Nordic Nest mainsite", "p7vzp7ftmsr1")
    }, "Value", "Key"), new { @class = "form-control dropdown" })
    <br>
    @Html.HiddenFor(model => model.Locales, new { id = "localesInput" })
    @Html.LabelFor(model => model.Locales)
    <div id="localesCheckboxes">
        <input type="checkbox" id="allLocales" name="locales" value="yo,zh-CN,da-DK,nl-NL,en-US,fi-FI,fr-FR,de-DE,el-GR,it-IT,ja-JP,ko-KR,nb-NO,pl-PL,pt-PT,es-ES,sv-SE"> All Locales<br>
        <input type="checkbox" id="swedishSweden" name="locales" value="sv-SE"> Swedish (Sweden)<br>
        <input type="checkbox" id="chineseSimplifiedChina" name="locales" value="zh-CN"> Chinese (Simplified, China)<br>
        <input type="checkbox" id="danishDenmark" name="locales" value="da-DK"> Danish (Denmark)<br>
        <input type="checkbox" id="dutchNetherlands" name="locales" value="nl-NL"> Dutch (Netherlands)<br>
        <input type="checkbox" id="englishUnitedStates" name="locales" value="en-US"> English (United States)<br>
        <input type="checkbox" id="finnishFinland" name="locales" value="fi-FI"> Finnish (Finland)<br>
        <input type="checkbox" id="frenchFrance" name="locales" value="fr-FR"> French (France)<br>
        <input type="checkbox" id="germanGermany" name="locales" value="de-DE"> German (Germany)<br>
        <input type="checkbox" id="greekGreece" name="locales" value="el-GR"> Greek (Greece)<br>
        <input type="checkbox" id="italianItaly" name="locales" value="it-IT"> Italian (Italy)<br>
        <input type="checkbox" id="japaneseJapan" name="locales" value="ja-JP"> Japanese (Japan)<br>
        <input type="checkbox" id="koreanKorea" name="locales" value="ko-KR"> Korean (Korea)<br>
        <input type="checkbox" id="norwegianBokmalNorway" name="locales" value="nb-NO"> Norwegian Bokmål (Norway)<br>
        <input type="checkbox" id="polishPoland" name="locales" value="pl-PL"> Polish (Poland)<br>
        <input type="checkbox" id="portuguesePortugal" name="locales" value="pt-PT"> Portuguese (Portugal)<br>
        <input type="checkbox" id="spanishSpainInternationalSort" name="locales" value="es-ES"> Spanish (Spain, International Sort)<br>
        <input type="checkbox" id="yoruba" name="locales" value="yo"> Yoruba<br>
    </div>

    @Html.HiddenFor(model => model.ContentTypesId, new { id = "contentTypesInput" })
    @Html.LabelFor(model => model.ContentTypesId)
    <div id="contentTypesCheckboxes">
        <input type="checkbox" id="ad" name="contentTypes" value="ad"> Ad<br>
        <input type="checkbox" id="authorBlock" name="contentTypes" value="autherBlock"> Author Block<br>
        <input type="checkbox" id="authorizationPage" name="contentTypes" value="AuthorizationPage"> Authorization Page<br>
        <input type="checkbox" id="brand" name="contentTypes" value="brand"> Brand<br>
        <input type="checkbox" id="brandsBlock" name="contentTypes" value="brandsBlock"> Brands Block<br>
        <input type="checkbox" id="categoryFilterBlock" name="contentTypes" value="categoryFilterBlock"> Category Filter Block<br>
        <input type="checkbox" id="cfMenu" name="contentTypes" value="cfMenu"> CF Menu<br>
        <input type="checkbox" id="collection" name="contentTypes" value="collection"> Collection<br>
        <input type="checkbox" id="contentTag" name="contentTypes" value="ContentTag"> Content Tag<br>
        <input type="checkbox" id="designer" name="contentTypes" value="designer"> Designer<br>
        <input type="checkbox" id="footer" name="contentTypes" value="footer"> Footer<br>
        <input type="checkbox" id="productListingPage" name="contentTypes" value="productListingPage"> Product Listing Page<br>
    </div>

    @* @Html.LabelFor(model => model.ContentTypesId)
    <small>ex: productListingPage, ad, brand </small>
    @Html.TextBoxFor(model => model.ContentTypesId) *@

    @Html.LabelFor(model => model.AccessToken)
    <small>your personal accesstoken from Contentful</small>
    <br>
    @Html.PasswordFor(model => model.AccessToken)
    <br>
    <input type="submit" value="Export" id="exportButton" />
}
<div id="loading" style="display:none;">Loading<span>.</span><span>.</span><span>.</span></div>


<div id="downloadLink" style="display:none;">
    <a id="excelDownloadLink" href="#">Copy this link address and put it in a new tab to download the excel file</a>
</div>

<div id="error" style="display:none;"></div>

@section scripts {
    <script>

        $(function () {
            $('#exportForm').submit(function (event) {
                event.preventDefault(); // Hindra standardformuläret från att skickas

                var isEmpty = false;
                $('input[type="text"], select').each(function () {
                    if ($(this).val() === '' || $(this).val() === 'Choose environment') {
                        isEmpty = true;
                        return false; // Break out of the loop
                    }
                });

                if (isEmpty) {
                    alert('All fields must be filled out.');
                    return false; // Prevent form submission
                }

                // Visa "Loading..." texten
                $('#loading').show();

                var selectedLocales = [];
                $('input[name="locales"]:checked').each(function () {
                    selectedLocales.push($(this).val());
                });
                selectedLocales = selectedLocales.join(', ');
                $('#localesInput').val(selectedLocales);

                var selectedContentTypes = [];
                $('input[name="contentTypes"]:checked').each(function () {
                    selectedContentTypes.push($(this).val());
                });

                selectedContentTypes = selectedContentTypes.join(', ');
                $('#contentTypesInput').val(selectedContentTypes);


                $.ajax({
                    url: $(this).attr('action'),
                    method: 'POST',
                    data: $(this).serialize(),
                    success: function (response) {
                        $('#loading').hide();
                        $('#error').hide();
                        var downloadLink = $('#downloadLink');
                        downloadLink.show();
                        $('#excelDownloadLink').attr('href', response);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        $('#loading').hide();
                        $('#error').text(jqXHR.responseText).show();
                    }
                });

            });

            
        });

    </script>
}
